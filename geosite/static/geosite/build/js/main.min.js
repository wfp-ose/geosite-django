var geosite={init:{},directives:{},controllers:{},filters:{},vecmath:{},tilemath:{},api:{}};geosite.init.listeners=function(){$("body").on("click",".geosite-intent",function(e){e.preventDefault();var t=$(this),r=angular.element("[ng-controller="+t.data("intent-ctrl")+"]").scope();if(t.hasClass("geosite-toggle"))t.hasClass("geosite-off")?(t.removeClass("geosite-off"),geosite.api.intend(t.data("intent-names")[0],t.data("intent-data"),r)):(t.addClass("geosite-off"),geosite.api.intend(t.data("intent-names")[1],t.data("intent-data"),r));else if(t.hasClass("geosite-radio")){var n=t.parents(".geosite-radio-group:first").find(".geosite-radio").not(t);t.hasClass("geosite-on")||(t.addClass("geosite-on"),t.data("intent-class-on")&&(t.addClass(t.data("intent-class-on")),n.removeClass(t.data("intent-class-on"))),n.removeClass("geosite-on"),t.data("intent-class-off")&&(t.removeClass(t.data("intent-class-off")),n.addClass(t.data("intent-class-off"))),geosite.api.intend(t.data("intent-name"),t.data("intent-data"),r))}else geosite.api.intend(t.data("intent-name"),t.data("intent-data"),r)})},geosite.api.welcome=function(e){e=e||{};var t=e.$scope||e.scope||angular.element("#geosite-main").scope(),r={id:"geosite-modal-welcome",dynamic:{},"static":{welcome:t.map_config.welcome}};geosite.api.intend("toggleModal",r,t)},geosite.api.intend=function(e,t,r){r.$emit(e,t)},geosite.assert_float=function(e,t){return void 0===e||""===e?t:angular.isNumber(e)?e:parseFloat(e)},geosite.assert_array_length=function(e,t,r){return void 0===e||""===e?r:angular.isString(e)?(e=e.split(","),e.length==t?e:r):angular.isArray(e)?e.length==t?e:r:void 0},geosite.controllers.controller_base=function(e,t){},geosite.init_controller_base=function(e){e.controller("GeositeControllerBase",geosite.controllers.controller_base)},geosite.init_controller=function(e,t,r){var n=e.data("controllerName");e.data("controllerType");t.controller(n,r||geosite.controllers.controller_base)},geosite.init_controllers=function(e,t,r){for(var n=0;n<r.length;n++){var i=r[n];$(i.selector,e).each(function(){try{geosite.init_controller($(this),t,i.controller)}catch(e){console.log('Could not load Geosite Controller "'+i.selector+'"',e)}})}},geosite.vecmath={},geosite.vecmath.distance=function(e,t){var r=L.Projection.SphericalMercator;if(void 0!=t.toString&&t.toString().startsWith("LatLng"))return r.project(e).distanceTo(r.project(t));var n=void 0;return $.each(t._layers,function(t,i){var a=i._latlngs,o=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(r.project(e),r.project(a[o]),r.project(a[o+1])),o++);o<a.length-1;o++){var s=L.LineUtil.pointToSegmentDistance(r.project(e),r.project(a[o]),r.project(a[o+1]));n>s&&(n=s)}}),n},geosite.vecmath.closestLocation=function(e,t){if(void 0!=t.toString&&t.toString().startsWith("LatLng"))return t;var r=L.Projection.SphericalMercator,n=void 0,i=void 0;return $.each(t._layers,function(t,a){var o=a._latlngs,s=0;for(void 0==n&&(n=L.LineUtil.pointToSegmentDistance(r.project(e),r.project(o[s]),r.project(o[s+1])),i=L.LineUtil.closestPointOnSegment(r.project(e),r.project(o[s]),r.project(o[s+1])),s++);s<o.length-1;s++){var l=L.LineUtil.pointToSegmentDistance(r.project(e),r.project(o[s]),r.project(o[s+1]));n>l&&(n=l,i=L.LineUtil.closestPointOnSegment(r.project(e),r.project(o[s]),r.project(o[s+1])))}}),r.unproject(i)},geosite.vecmath.getClosestFeatureAndLocation=function(e,t){var r=void 0,n=0,i=void 0;if(void 0!=e&&e.length>0){r=e[0],n=geosite.vecmath.distance(t,e[0].geometry),i=geosite.vecmath.closestLocation(t,e[0].geometry);for(var a=1;a<e.length;a++){var o=e[a];geosite.vecmath.distance(t,o.geometry)<n&&(r=o,n=geosite.vecmath.distance(t,o.geometry),i=geosite.vecmath.closestLocation(t,o.geometry))}}return{feature:r,location:i}},geosite.init_state=function(e,t){var r=$.extend({},e),n=getHashValueAsFloat(["latitude","lat","y"])||e.lat||0,i=getHashValueAsFloat(["longitude","lon","long","lng","x"])||e.lon||0,a=getHashValueAsInteger(["zoom","z"])||e.z||3,o={lat:n,lon:i,z:a};return r.view=void 0!=r.view?$.extend(r.view,o):o,void 0!=r.filters&&$.each(r.filters,function(e,n){$.each(n,function(n,i){var a=t.filters[e][n].toLowerCase(),o=getHashValue(e+":"+n,a);void 0!=o&&""!=o&&(r.filters[e][n]=o)})}),void 0!=r.styles,r},geosite.ui_init_slider_label=function(e,t,r,n,i){if("ordinal"==r){var a={value:i};t.data("label").html(e(t.data("label-template"))(a))}else if("continuous"==r)if("boolean"==$.type(n)&&n||"true"==n.toLowerCase()){var a={values:[i[0],i[1]]};t.data("label").html(e(t.data("label-template"))(a))}else if("min"==n||"max"==n){var a={value:i};t.data("label").html(e(t.data("label-template"))(a))}},geosite.ui_init_slider_slider=function(e,t,r,n,i,a,o,s,l){"ordinal"==n?r.slider({range:"boolean"==$.type(i)&&i||"true"==i.toLowerCase()?!0:i,value:a,min:0,max:s,step:1,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var a=r.data("output"),o=r.data("options")[i.value],s={};s[a]=o,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:s},t)}}):"continuous"==n&&("boolean"==$.type(i)&&i||"true"==i.toLowerCase()?r.slider({range:!0,values:a,min:o,max:s,step:l,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var a=r.data("output"),o=i.values,s={};s[a]=o,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:s},t)}}):("min"==i||"max"==i)&&r.slider({range:i,value:a,min:o,max:s,step:l,slide:function(n,i){geosite.ui_update_slider_label.apply(this,[e,n,i]);var a=r.data("output"),o=i.value/100,s={};s[a]=o,geosite.api.intend("filterChanged",{layer:"popatrisk",filter:s},t)}}))},geosite.ui_update_slider_label=function(e,t,r){var n=$(this),i=n.data("type"),a=n.data("range");if("ordinal"==i){var o={value:n.data("options")[r.value]};n.data("label").html(e(n.data("label-template"))(o))}else if("continuous"==i)if("boolean"==$.type(a)&&a||"true"==a.toLowerCase()){var o={values:[r.values[0],r.values[1]]};n.data("label").html(e(n.data("label-template"))(o))}else if("min"==a||"max"==a){var o={value:r.value/100};n.data("label").html(e(n.data("label-template"))(o))}};var getHashValue=function(e,t){var r=void 0;e="string"==typeof e?[e.toLowerCase()]:$.map(e,function(e,t){return e.toLowerCase()});for(var n=location.hash.toLowerCase(),i=0;i<e.length;i++){var a=e[i],o=n.match(new RegExp(a+"=([^&]*)"));if(o&&(r=o[1],void 0!=r&&null!=r&&""!=r))break}if(void 0!=t)if("integer"==t)r=void 0!=r&&null!=r&&""!=r?parseInt(r,10):void 0;else if("stringarray"==t){if(void 0!=r){var s=r.split(",");r=s}}else if("integerarray"==t){if(void 0!=r){for(var l=r.split(","),s=[],i=0;i<l.length;i++){var u=l[i];s.push(void 0!=u&&null!=u&&""!=u?parseInt(u,10):void 0)}r=s}}else if("float"==t)r=void 0!=r&&null!=r&&""!=r?parseFloat(r):void 0;else if("floatarray"==t&&void 0!=r){for(var l=r.split(","),s=[],i=0;i<l.length;i++){var u=l[i];s.push(void 0!=u&&null!=u&&""!=u?parseFloat(u):void 0)}r=s}return r},hasHashValue=function(e){var t=getHashValue(e);return void 0!=t&&null!=t&&""!=t},getHashValueAsStringArray=function(e){return getHashValue(e,"stringarray")},getHashValueAsInteger=function(e){return getHashValue(e,"integer")},getHashValueAsIntegerArray=function(e){return getHashValue(e,"integerarray")},getHashValueAsFloat=function(e){return getHashValue(e,"float")},sortLayers=function(e,t){var r=$.isArray(e)?e:$.map(e,function(e){return e});return r=r.sort(function(e,t){return e.options.renderOrder-t.options.renderOrder}),t===!0&&r.reverse(),r},updateRenderOrder=function(e){for(var t=0;t<e.length;t++)e[t].bringToFront()},layersAsArray=function(e){return $.map(e,function(e,t){return{id:t,layer:e}})},extract=function(e,t){var r=void 0;if(0==e.length)r=t;else if(void 0!=t){var n=e.slice(1),i=Array.isArray(t)?t[e[0]]:t[""+e[0]];r=extract(n,i)}return r};geosite.codec={},geosite.codec.parseFeatures=function(e,t){var r=[];return $(e).find("gml\\:featuremember").each(function(){var e=$(this).children(),n=e.prop("tagName").toLowerCase(),i=geosite.codec.parseAttributes(e,t[n]),a=e.find("geonode\\:shape"),o=void 0;if(a.find("gml\\:point").length>0){var s=a.find("gml\\:point").find("gml\\:coordinates").text().split(",");o=new L.LatLng(parseFloat(s[1]),parseFloat(s[0]))}else if(a.find("gml\\:multilinestring").length>0){var s=a.find("gml\\:multilinestring").find("gml\\:linestringmember").find("gml\\:linestring").find("gml\\:coordinates").text().split(" ");s=$.map(s,function(e,t){var r=e.split(",");return[[parseFloat(r[0]),parseFloat(r[1])]]});var l=[{type:"LineString",coordinates:s}];o=new L.GeoJSON(l,{})}var u={featuretype:n,attributes:i,geometry:o};r.push(u)}),r},geosite.codec.parseAttributes=function(e,t){for(var r={},n=0;n<t.length;n++){var i=t[n],a=i.output||i.attribute;r[a]=void 0;var o=i.attribute||i.input,s=void 0!=o?[o]:i.inputs;if(void 0!=s)for(var l=0;l<s.length;l++){var o=s[l];if(e.find("geonode\\:"+o).length>0){r[a]=e.find("geonode\\:"+o).text();break}}}return r},geosite.popup={},geosite.popup.buildChart=function(e,t,r,n){var i="";return i+='<div style="text-align:center;"><b>'+e.label+"</b></div><br>",i+='<div id="'+e.id+'" class="geosite-popup-chart"></div>'},geosite.popup.buildField=function(e,t,r,n){var i=e.output||e.attribute,a=void 0,o=!1;if(void 0!=e.when&&"defined"==e.when.toLowerCase()?void 0!=r.attributes[i]&&(o=!0):o=!0,o)if("link"==e.type){var s=void 0!=e.value?e.value:"{{ feature.attributes."+i+" }}";a="<span><b>"+e.label+':</b> <a target="_blank" href="'+e.url+'">',a+=s,a+="</a></span>"}else{var s=void 0;if(void 0!=e.value)s=e.value;else{if("date"==e.type){var l=e.format||"medium";s="feature.attributes."+i+" | date:'"+l+"'"}else s="feature.attributes."+i;e.fallback&&(s="("+s+") || '"+e.fallback+"'"),s="{{ "+s+" }}"}a="<span><b>"+e.label+":</b> "+s+"</span>"}return a},geosite.popup.buildPopupTemplate=function(e,t,r,n){var i=e.panes,a="";angular.isDefined(e.title)&&(a+='<h5 style="word-wrap:break-word;text-align:center;">'+e.title+"</h5>");for(var o=[],s=0;s<i.length;s++){var l=i[s],u=[],c=[];if("fields"in l)for(var f=0;f<l.fields.length;f++){var d=geosite.popup.buildField(l.fields[f],t,r,n);void 0!=d&&u.push(d)}if("charts"in l)for(var f=0;f<l.charts.length;f++){var g=geosite.popup.buildChart(l.charts[f],t,r,n);void 0!=g&&c.push(g)}var p=u.join("<br>");c.length>0&&(p+="<hr>"+c.join("<br>")),o.push(p)}if(i.length>1){var v=[],l=i[0],m='<li class="active"><a data-toggle="tab" href="#'+l.id+'">'+l.tab.label+"</a></li>";v.push(m);for(var s=1;s<i.length;s++)l=i[s],m='<li><a data-toggle="tab" href="#'+l.id+'">'+l.tab.label+"</a></li>",v.push(m);var h='<ul class="nav nav-tabs nav-justified">'+v.join("")+"</ul>",y=[],b='<div id="'+i[0].id+'" class="tab-pane fade in active">'+o[0]+"</div>";y.push(b);for(var s=1;s<i.length;s++)b='<div id="'+i[s].id+'" class="tab-pane fade">'+o[s]+"</div>",y.push(b);a+=h+'<div class="tab-content">'+y.join("")+"</div>"}else a+=o[0];return a},geosite.popup.buildPopupContent=function(e,t,r,n){var i=geosite.popup.buildPopupTemplate(t.popup,t,r,n),a={layer:t,feature:r,state:n};return e(i)(a)},geosite.popup.openPopup=function(e,t,r,n,i,a){var o=geosite.popup.buildPopupContent(e,t,r,a),s=new L.Popup({maxWidth:t.popup.maxWidth||400},void 0);s.setLatLng(new L.LatLng(n.lat,n.lon)),s.setContent(o),i.openPopup(s)},geosite.tilemath={D2R:Math.PI/180,R2D:180/Math.PI},geosite.tilemath.point_to_bbox=function(e,t,r,n){var i=geosite.tilemath.point_to_radius(r),a=e+i;void 0!=n&&n>=0&&(a=a.toFixed(n));var o=e-i;void 0!=n&&n>=0&&(o=o.toFixed(n));var s=t-i;void 0!=n&&n>=0&&(s=s.toFixed(n));var l=t+i;return void 0!=n&&n>=0&&(l=l.toFixed(n)),[o,s,a,l]},geosite.tilemath.point_to_radius=function(e){return(geosite.config.click_radius||4)/e},geosite.tilemath.tms_to_bbox=function(e,t,r){var n=geosite.tilemath.tile_to_lon(e+1,r),i=geosite.tilemath.tile_to_lon(e,r),a=geosite.tilemath.tile_to_lat(t+1,r),o=geosite.tilemath.tile_to_lat(t,r);return[i,a,n,o]},geosite.tilemath.tile_to_lon=function(e,t){return e/Math.pow(2,t)*360-180},geosite.tilemath.tile_to_lat=function(e,t){return n=Math.pi-2*Math.PI*e/Math.pow(2,t),R2D*Math.atan(.5*(Math.exp(n)-Math.exp(-n)))},geosite.http={},geosite.http.build_promises=function(e,t){for(var r=[],n=0;n<t.length;n++){var i=t[n],a={},o=e.get(i,a);r.push(o)}return r},geosite.http.build_features=function(e,t){for(var r=[],n=0;n<e.length;n++){var i=e[n];if(200==i.status){var a=i.data;r=r.concat(geosite.codec.parseFeatures(a,t))}}return r},geosite.layers={},geosite.layers.aggregate_fields=function(e){for(var t=[],r=0;r<e.popup.panes.length;r++)t=t.concat(e.popup.panes[r].fields);return t},geosite.layers.init_baselayers=function(e,t){for(var r={},n=0;n<t.length;n++){var i=t[n];try{r[i.id]=L.tileLayer(i.source.url,{id:i.id,attribution:i.source.attribution})}catch(a){console.log("Could not add baselayer "+n)}}return r},geosite.layers.init_featurelayer_post=function(e,t,r,n,i){void 0!=n?((void 0!=i?i:!0)&&n.addTo(t.map),geosite.api.intend("layerLoaded",{type:"featurelayer",layer:r,visible:i},e)):console.log("Could not add featurelayer "+r+" because it is undefined.")},geosite.layers.init_featurelayer_wms=function(e,t,r,n,i){var a=i.wms,o=L.tileLayer.wms(a.url,{renderOrder:$.inArray(n,r.renderlayers),buffer:a.buffer||0,version:a.version||"1.1.1",layers:a.layers.join(","),styles:a.styles?a.styles.join(","):"",format:a.format,transparent:a.transparent||!1,attribution:i.source.attribution});t.featurelayers[n]=o,geosite.layers.init_featurelayer_post(e,t,n,o,i.visible)},geosite.layers.init_featurelayer_geojson=function(e,t,r,n,i){$.ajax({url:i.source.url,dataType:"json",success:function(r){var a=void 0;if("heatmap"==i.transform){for(var o=[],s=0,l=0;l<r[0].features.length;l++){var u="attribute"in i.heatmap&&""!=i.heatmap.attribute?r[0].features[l].properties[i.heatmap.attribute]:1;o.push([r[0].features[l].geometry.coordinates[1],r[0].features[l].geometry.coordinates[0],u]),u>s&&(s=u)}for(var l=0;l<o.length;l++)o[l][2]=o[l][2]/s;var c=L.heatCanvas();a=L.heatLayer(o,{renderer:c,attribution:i.source.attribution,radius:i.heatmap.radius||25,blur:i.heatmap.blur||15,max:i.heatmap.max||1,minOpacity:i.heatmap.minOpacity||.5})}else a=L.geoJson(r,{attribution:i.source.attribution});t.featurelayers[n]=a,geosite.layers.init_featurelayer_post(e,t,n,a,i.visible)}})},geosite.layers.init_featurelayer=function(e,t,r,n,i){(void 0==t.enabled||1==t.enabled)&&("geojson"==t.type.toLowerCase()?geosite.layers.init_featurelayer_geojson(r,n,i,e,t):"wms"==t.type.toLowerCase()&&geosite.layers.init_featurelayer_wms(r,n,i,e,t))},geosite.layers.init_featurelayers=function(e,t,r,n){$.each(e,function(e,i){geosite.layers.init_featurelayer(e,i,t,r,n)})};var MONTHS_NUM=[1,2,3,4,5,6,7,8,9,10,11,12],MONTHS_LONG=["January","February","March","April","May","June","July","August","September","October","November","December"],MONTHS_SHORT3=["jan","feb","mar","apr","may","jun","jul","aug","sep","oct","nov","dec"],MONTHS_ALL=$.map(MONTHS_NUM,function(e,t){return{num:e,short3:MONTHS_SHORT3[t],"long":MONTHS_LONG[t]}}),DAYSOFTHEWEEK=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];geosite.filters["default"]=function(){return function(e,t){return e||t}},geosite.filters.join=function(){return function(e,t){return Array.isArray(e)?e.join(t):e}},geosite.filters.first=function(){return function(e){return Array.isArray(e)?e[0]:e}},geosite.filters.last=function(){return function(e){if(!Array.isArray(e))return e;if(0!=e.length)return e[e.length-1]}},geosite.filters.formatInteger=function(){return function(e,t,r){if(void 0!=e&&""!==e){if("delimited"==t){r=r||",";for(var n=Math.round(e).toString(),i=new RegExp("(\\d+)(\\d{3})","gi");i.test(n);)n=n.replace(i,"$1"+r+"$2");return n}return Math.round(e).toString()}return""}},geosite.filters.formatArray=function(){return function(e){return Array.isArray(e)?0==e.length?"":1==e.length?e[0]:2==e.length?e.join(" and "):e.slice(0,-1).join(", ")+", and "+e[e.length-1]:e}},geosite.filters.formatMonth=function(){return function(e,t){return void 0!=e&&""!==e?"long"==t?months_long[e-1]:"short3"==t||"short_3"==t?months_short_3[e-1]:"int2"==t&&10>e?"0"+e.toString():e.toString():""}},geosite.filters.md2html=function(){return function(e){if(void 0!=e){var t=new showdown.Converter;html=t.makeHtml(e),html=html.substring("<p>".length,html.length-"</p>".length);var r=new RegExp("(<a .*)>(.*?)</a>","gi");return html=html.replace(r,'$1 target="_blank">$2</a>'),html=html.replace(new RegExp("\n","gi"),"<br>"),html}return""}},geosite.filters.percent=function(){return function(e,t){return 100*e/t}},geosite.filters.tabLabel=function(){return function(e){return 2==e.split(" ").length?e.replace(" ","<br>"):e}},geosite.filters.as_float=function(){return function(e){return 1*e}},geosite.filters.choose=function(){return function(e,t){if(Array.isArray(t)){var r=t;return e+r[e%r.length]}var r=Array.prototype.slice.call(arguments,[1]);return r[e%r.length]}},geosite.filters.add=function(){return function(e,t){if(Array.isArray(t)){var r=t;return e+r[e%r.length]}if(arguments.length>2){var r=Array.prototype.slice.call(arguments,[1]);return e+r[e%r.length]}return e+t}},geosite.filters.default_if_undefined=function(){return function(e,t){return void 0!=e?e:t}},geosite.filters.title=function(){return function(e){return"string"===$.type(e)?e.toTitleCase():e}},geosite.filters.as_array=function(){return function(e){return $.isArray(e)?e:$.map(e,function(e,t){return{key:t,item:e}})}},geosite.filters.sortItemsByArray=function(){return function(e,t){return $.isArray(e)?(e=$.grep(e,function(e,r){return-1!=$.inArray(e.key,t)}),e.sort(function(e,r){return $.inArray(e.key,t)-$.inArray(e.key,t)}),e):e}},geosite.filters.url_shapefile=function(){return function(e,t){var r="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"SHAPE-ZIP",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var a=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");r=e.wfs.url+"?"+a}return r}},geosite.filters.url_geojson=function(){return function(e,t){var r="";if("wfs"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={format_options:"charset:UTF-8",typename:n,outputFormat:"json",version:"1.0.0",service:"WFS",request:"GetFeature"};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var a=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");r=e.wfs.url+"?"+a}return r}},geosite.filters.url_kml=function(){return function(e,t){var r="";if("kml"in e){var n="";"layers"in e.wms?n=e.wms.layers[0]:"layers"in e.wfs&&(n=e.wfs.layers[0]);var i={mode:"download",layers:n};void 0!=t&&(i.cql_filter="BBOX("+e.wfs.geometry+", "+t.view.extent+")");var a=$.map(i,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");r=e.kml.url+"?"+a}return r}},geosite.filters.url_describefeaturetype=function(){return function(e){var t="";if("wfs"in e){var r=e.wfs.version||"1.0.0",n={service:"WFS",request:"DescribeFeatureType",version:r},i="";"layers"in e.wms?i=e.wms.layers.unique().join(","):"layers"in e.wfs&&(i=e.wfs.layers.unique().join(",")),"1.1.0"==r||"1.0.0"==r?n.typeName=i:n.typeNames=i;var a=$.map(n,function(e,t){return encodeURIComponent(t)+"="+encodeURIComponent(e)}).join("&");t=e.wfs.url+"?"+a}return t}},geosite.filters.breakpoint=function(){return function(e,t){var r=geosite.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=r&&r.length>0?r[t]:-1}},geosite.filters.breakpoints=function(){return function(e){var t=geosite.breakpoints[e.styles["default"].dynamic.options.breakpoints];return void 0!=t&&t.length>0?t:[]}},geosite.filters.formatBreakpoint=function(){return function(e){return Number.isInteger(e)?geosite.filters.formatInteger()(e,"delimited"," "):$.isNumeric(e)?geosite.filters.formatFloat()(e,2):""+e}},geosite.filters.formatFloat=function(){return function(e,t){return void 0!=e&&""!==e?void 0!=t?e.toFixed(t):e.toString():""}},geosite.filters.position_x=function(){return function(e,t,r,n){var i=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},a=i(r)-2*n;return n+a*t/e}},geosite.filters.width_x=function(){return function(e,t,r){var n=function(e){return $.isNumeric(e)?e:parseInt(e.substring(0,e.indexOf("px")),10)},i=n(t)-2*r;return i/e}},geosite.filters.len=geosite.filters.length=function(){return function(e){return $.isArray(e)?e.length:0}},geosite.filters.layer_is_visible=function(){return function(e,t){t=t||$("#geosite-main").scope().state;var r=t.view.featurelayers;return e==t.view.baselayer||-1!=$.inArray(e,r)}},geosite.filters.ternary=function(){return function(e,t,r){return e?t:r}},geosite.directives.ngX=function(){return{scope:!0,link:function(e,t,r){e.$watch(r.ngX,function(e){t.attr("x",e)})}}},geosite.directives.ngY=function(){return{scope:!0,link:function(e,t,r){e.$watch(r.ngY,function(e){t.attr("y",e)})}}},geosite.directives.ngWidth=function(){return{scope:!0,link:function(e,t,r){e.$watch(r.ngWidth,function(e){t.attr("width",e)})}}},geosite.directives.ngR=function(){return{scope:!0,link:function(e,t,r){e.$watch(r.ngR,function(e){t.attr("r",e)})}}},geosite.directives.ngFill=function(){return{scope:!0,link:function(e,t,r){e.$watch(r.ngFill,function(e){t.attr("fill",e)})}}},geosite.directives.onRepeatDone=function(){return{restriction:"A",link:function(e,t,r){e.$emit(r.onRepeatDone||"repeat_done",{element:t,attributes:r})}}},geosite.directives.geositeModalLayerCarto=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_carto.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeModalLayerMore=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_more.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeModalLayerConfig=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_layer_config.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeSymbolCircle=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_circle.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeSymbolEllipse=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_ellipse.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeSymbolGraduated=function(){return{restrict:"EA",replace:!0,scope:{style:"=style",containerWidth:"@"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeSymbolGraphic=function(){return{restrict:"EA",replace:!0,scope:{style:"=style"},templateUrl:"symbol_graduated.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeLegendBaselayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_baselayers.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeLegendFeaturelayers=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"legend_featurelayers.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeModalWelcome=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_welcome.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeModalAbout=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_about.tpl.html",link:function(e,t,r){}}},geosite.directives.geositeModalDownload=function(){return{restrict:"EA",replace:!0,scope:!0,templateUrl:"modal_download.tpl.html",link:function(e,t,r){}}},geosite.controllers.controller_modal=function(e,t,r,n,i,a){angular.extend(this,r("GeositeControllerBase",{$element:t,$scope:e}));$(t);e.test="blah blah blah"},geosite.controllers.controller_legend=function(e,t,r,n,i,a){angular.extend(this,r("GeositeControllerBase",{$element:t,$scope:e})),e.map_config=i,e.state=n,e.updateVariables=function(){var t=e.map_config.legendlayers,r=$.map(e.map_config.featurelayers,function(e,t){return{key:t,item:e}});r=$.grep(r,function(e,r){return-1!=$.inArray(e.key,t)}),r.sort(function(e,r){return $.inArray(e.key,t)-$.inArray(r.key,t)}),e.featurelayers=r},e.updateVariables(),e.$watch("map_config.featurelayers",e.updateVariables),e.$watch("map_config.legendlayers",e.updateVariables),e.$watch("state",e.updateVariables);$(t);e.$on("refreshMap",function(t,r){console.log("args: ",r),e.$apply(function(){e.state=r.state})})},geosite.controllers.controller_map=function(e,t,r,n,i){},geosite.controllers.controller_about=function(e,t,r,n,i,a,o){angular.extend(this,r("GeositeControllerBase",{$element:t,$scope:e}))},geosite.controllers.controller_download=function(e,t,r,n,i,a,o){angular.extend(this,r("GeositeControllerBase",{$element:t,$scope:e}))};